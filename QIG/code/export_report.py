#!/usr/bin/env python3
import json, os, glob
from pathlib import Path
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

BASE = Path(__file__).resolve().parent.parent
RUNS_DATA = BASE / "data" / "runs"
RUNS_FIGS = BASE / "figures" / "runs"
REPORTS = BASE / "reports"

def latest_run_id() -> str:
    cand = sorted([p.name for p in RUNS_DATA.glob("*") if p.is_dir()])
    if not cand:
        raise SystemExit("No runs found under data/runs/*")
    return cand[-1]

def main():
    run_id = latest_run_id()
    data_dir = RUNS_DATA / run_id
    figs_dir = RUNS_FIGS / run_id
    REPORTS.mkdir(parents=True, exist_ok=True)

    bar_png  = figs_dir / "spikes_bar.png"
    line_png = data_dir / "spikes_line.png"  # analyze_last_run.py가 여기에 생성
    table_csv = data_dir / "summary_table.csv"
    manifest_json = data_dir / "manifest.json"

    # 로드
    meta = {}
    if manifest_json.exists():
        meta = json.loads(manifest_json.read_text(encoding="utf-8"))

    df = None
    if table_csv.exists():
        df = pd.read_csv(table_csv)

    pdf_path = REPORTS / f"{run_id}_report.pdf"
    with PdfPages(pdf_path) as pdf:
        # 1) 표지 + 메타
        fig = plt.figure(figsize=(8.5, 11))
        fig.suptitle(f"DTG Sweep Report — {run_id}", fontsize=18)
        t = fig.text
        y = 0.92
        t(0.1, y, "Summary", fontsize=14); y -= 0.04
        for k, v in [
            ("alphas", meta.get("alphas")),
            ("seed", meta.get("seed")),
            ("created_at", meta.get("created_at")),
            ("run_dir", str(meta.get("run_dir", ""))),
            ("figs_dir", str(meta.get("figs_dir", ""))),
        ]:
            t(0.12, y, f"- {k}: {v}")
            y -= 0.035
        t(0.1, 0.05, "Generated by export_report.py", fontsize=8)
        pdf.savefig(fig); plt.close(fig)

        # 2) 막대 그래프
        if bar_png.exists():
            img = plt.imread(bar_png)
            fig = plt.figure(figsize=(8.5, 6))
            plt.imshow(img); plt.axis("off")
            plt.title("Spikes by alpha (bar)")
            pdf.savefig(fig); plt.close(fig)

        # 3) 라인 그래프
        if line_png.exists():
            img = plt.imread(line_png)
            fig = plt.figure(figsize=(8.5, 6))
            plt.imshow(img); plt.axis("off")
            plt.title("Spikes vs. alpha (line)")
            pdf.savefig(fig); plt.close(fig)

        # 4) 표
        if df is not None and not df.empty:
            fig = plt.figure(figsize=(8.5, 6))
            plt.axis("off")
            plt.title("Summary Table")
            tbl = plt.table(cellText=df.values,
                            colLabels=list(df.columns),
                            loc="center")
            tbl.scale(1, 1.2)
            pdf.savefig(fig); plt.close(fig)

    print(f"[OK] report → {pdf_path}")

if __name__ == "__main__":
    main()